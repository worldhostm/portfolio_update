'use client'

import { useEffect, useState, useRef } from 'react'

// Add custom CSS for scrollbar hiding
const globalStyles = `
  .scrollbar-hide {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;  /* Chrome, Safari and Opera */
  }
`

const Navigation = () => {
  const [activeSection, setActiveSection] = useState('about')

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId)
    if (element) {
      element.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      })
    }
  }

  useEffect(() => {
    const handleScroll = () => {
      const sections = ['about', 'skills', 'projects', 'contact']
      const scrollPosition = window.scrollY + 100

      for (const section of sections) {
        const element = document.getElementById(section)
        if (element) {
          const offsetTop = element.offsetTop
          const offsetHeight = element.offsetHeight
          
          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {
            setActiveSection(section)
            break
          }
        }
      }
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  return (
    <nav className="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-sm border-b border-gray-200">
      <div className="max-w-6xl mx-auto px-4">
        <div className="flex justify-center space-x-8 py-4">
          {[
            { id: 'about', label: 'About' },
            { id: 'skills', label: 'Skills' },
            { id: 'projects', label: 'Projects' },
            { id: 'contact', label: 'Contact' }
          ].map((item) => (
            <button
              key={item.id}
              onClick={() => scrollToSection(item.id)}
              className={`px-4 py-2 rounded-lg transition-colors ${
                activeSection === item.id
                  ? 'bg-blue-500 text-white'
                  : 'text-gray-700 hover:bg-gray-100'
              }`}
            >
              {item.label}
            </button>
          ))}
        </div>
      </div>
    </nav>
  )
}

const ProgressBar = () => {
  const [scrollProgress, setScrollProgress] = useState(0)

  useEffect(() => {
    const handleScroll = () => {
      const totalHeight = document.documentElement.scrollHeight - window.innerHeight
      const currentProgress = (window.pageYOffset / totalHeight) * 100
      setScrollProgress(currentProgress)
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  return (
    <div className="fixed bottom-0 left-0 right-0 h-2 bg-gray-200 z-50">
      <div 
        className="h-full bg-blue-500 transition-all duration-150 ease-out"
        style={{ width: `${scrollProgress}%` }}
      />
    </div>
  )
}

const SideNavigation = () => {
  const [activeSection, setActiveSection] = useState('about')

  const sections = [
    { id: 'about', label: 'About' },
    { id: 'skills', label: 'Skills' },
    { id: 'projects', label: 'Projects' },
    { id: 'personal-projects', label: 'Personal' },
    { id: 'contact', label: 'Contact' }
  ]

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId)
    if (element) {
      element.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      })
    }
  }

  useEffect(() => {
    const handleScroll = () => {
      const scrollPosition = window.scrollY + 100

      for (const section of sections) {
        const element = document.getElementById(section.id)
        if (element) {
          const offsetTop = element.offsetTop
          const offsetHeight = element.offsetHeight
          
          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {
            setActiveSection(section.id)
            break
          }
        }
      }
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [sections])

  return (
    <div className="fixed left-6 top-1/2 transform -translate-y-1/2 z-40 hidden lg:block">
      <div className="flex flex-col space-y-4">
        {sections.map((section) => (
          <button
            key={section.id}
            onClick={() => scrollToSection(section.id)}
            className="group relative"
            aria-label={section.label}
          >
            <div 
              className={`rounded-full transition-all duration-500 ease-in-out ${
                activeSection === section.id 
                  ? 'w-8 h-3 bg-blue-500' 
                  : 'w-3 h-3 bg-gray-300 hover:bg-blue-300'
              }`}
            />
            <div className="absolute left-6 top-1/2 transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none">
              <div className="bg-gray-800 text-white px-2 py-1 rounded text-sm whitespace-nowrap">
                {section.label}
              </div>
            </div>
          </button>
        ))}
      </div>
    </div>
  )
}

const LimeCompanySwiper = () => {
  const [, ] = useState(0)
  const [isDragging, setIsDragging] = useState(false)
  const [startX, setStartX] = useState(0)
  const [scrollLeft, setScrollLeft] = useState(0)
  const containerRef = useRef<HTMLDivElement>(null)

  const projects = [
    { emoji: 'üí≥', title: 'Ïã†ÌïúÏπ¥Îìú TM ÏãúÏä§ÌÖú', desc: 'TM ÏãúÏä§ÌÖú Î≥¥Í≥†ÏÑú Î©îÎâ¥ Í∞úÎ∞ú (Í¥ÄÎ¶¨ÏûêÏö©)', tech: ['Java', 'Oracle', 'JSP'] },
    { emoji: 'üè¶', title: 'NH Ïä§ÎßàÌä∏Î±ÖÌÇπ', desc: 'ÏÇ¨ÏÑ§Ïù∏Ï¶ù 2Ïûê/3Ïûê Ïù∏Ï¶ù Í∞úÎ∞ú', tech: ['Java', 'Spring', 'Security'] },
    { emoji: 'üì¢', title: 'ÎùºÏù∏ Í¥ëÍ≥†ÌîåÎû´Ìèº', desc: 'Ìè¨Ïù∏Ìä∏ ÌéÄÎìú Í¥ÄÎ¶¨, Ìè¨Ïù∏Ìä∏ Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú', tech: ['Java', 'MySQL', 'API'] },
    { emoji: 'üõí', title: 'Î°ØÎç∞ÎßàÌä∏ MÏø†Ìè∞', desc: 'Ïû•Î∞îÍµ¨Îãà ÌååÌä∏ API Í∞úÎ∞ú', tech: ['Java', 'Spring', 'REST API'] },
    { emoji: 'üè¢', title: 'Ìö®ÏÑ±Í∑∏Î£π ERP', desc: 'ÍµêÏú° Í≤∞Í≥º Î≥¥Í≥† ÏãúÏä§ÌÖú Í∞úÎ∞ú', tech: ['Java', 'Oracle', 'MVC'] },
    { emoji: 'üé¨', title: 'ÏòÅÌôîÏßÑÌù•ÏúÑÏõêÌöå', desc: 'KOFIC/KOBIS ÌÜµÍ≥ÑÏÑ± ÌôîÎ©¥ Ïã†Í∑ú Í∞úÎ∞ú Î∞è Ïú†ÏßÄÎ≥¥Ïàò', tech: ['Java', 'JSP', 'Chart.js'] }
  ]

  const handleMouseDown = (e: React.MouseEvent) => {
    if (!containerRef.current) return
    setIsDragging(true)
    setStartX(e.pageX - containerRef.current.offsetLeft)
    setScrollLeft(containerRef.current.scrollLeft)
  }

  const handleMouseMove = (e: React.MouseEvent) => {
    if (!isDragging || !containerRef.current) return
    e.preventDefault()
    const x = e.pageX - containerRef.current.offsetLeft
    const walk = (x - startX) * 2
    containerRef.current.scrollLeft = scrollLeft - walk
  }

  const handleMouseUp = () => {
    setIsDragging(false)
  }

  const handleMouseLeave = () => {
    setIsDragging(false)
  }

  const handleTouchStart = (e: React.TouchEvent) => {
    if (!containerRef.current) return
    setIsDragging(true)
    setStartX(e.touches[0].pageX - containerRef.current.offsetLeft)
    setScrollLeft(containerRef.current.scrollLeft)
  }

  const handleTouchMove = (e: React.TouchEvent) => {
    if (!isDragging || !containerRef.current) return
    const x = e.touches[0].pageX - containerRef.current.offsetLeft
    const walk = (x - startX) * 2
    containerRef.current.scrollLeft = scrollLeft - walk
  }

  const handleTouchEnd = () => {
    setIsDragging(false)
  }


  return (
    <div className="bg-gray-50 p-6 rounded-lg shadow-md">
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-xl font-semibold text-gray-900">ÎùºÏûÑÏª¥ÌçºÎãà</h3>
        <span className="text-gray-500 text-sm">2019.09 - 2022.06 (2ÎÖÑ 10Í∞úÏõî)</span>
      </div>
      
      <div className="relative">
        <div 
          ref={containerRef}
          className={`flex overflow-x-auto space-x-6 pb-4 scrollbar-hide ${isDragging ? 'cursor-grabbing' : 'cursor-grab'}`}
          onMouseDown={handleMouseDown}
          onMouseMove={handleMouseMove}
          onMouseUp={handleMouseUp}
          onMouseLeave={handleMouseLeave}
          onTouchStart={handleTouchStart}
          onTouchMove={handleTouchMove}
          onTouchEnd={handleTouchEnd}
          style={{ 
            scrollBehavior: isDragging ? 'auto' : 'smooth',
            userSelect: 'none'
          }}
        >
          {projects.map((project, index) => (
            <div 
              key={index} 
              className="min-w-[200px] h-[300px] bg-white p-4 rounded-lg shadow-sm flex-shrink-0 flex flex-col"
              style={{ pointerEvents: isDragging ? 'none' : 'auto' }}
            >
              <div className="flex flex-col items-center mb-4">
                <span className="text-3xl mb-2">{project.emoji}</span>
                <h4 className="text-sm font-semibold text-blue-600 text-center leading-tight">{project.title}</h4>
              </div>
              <p className="text-gray-700 text-xs mb-4 flex-grow text-center">{project.desc}</p>
              <div className="flex flex-wrap gap-1 justify-center">
                {project.tech.map((tech, i) => (
                  <span key={i} className="bg-blue-100 text-blue-700 px-2 py-1 rounded text-xs">{tech}</span>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

export default function Home() {
  return (
    <>
      <style jsx global>{globalStyles}</style>
      <Navigation />
      <SideNavigation />
      <ProgressBar />
      
      <div className="pt-20">
        {/* About Section */}
        <section id="about" className="min-h-screen bg-white flex items-center justify-center">
          <div className="max-w-4xl mx-auto px-4 text-center">
            <div className="mb-12">
              <div className="w-64 h-64 mx-auto rounded-full bg-gradient-to-br from-blue-400 to-purple-500 shadow-lg flex items-center justify-center overflow-hidden">
                <img 
                  src="/profile_cho.jpeg"
                  alt="Profile"
                  className="w-full h-full object-cover"
                  onError={(e) => {
                    e.currentTarget.style.display = 'none';
                    if(e.currentTarget.parentElement) e.currentTarget.parentElement.innerHTML = '<div class="text-white text-6xl">üë®‚Äçüíª</div>';
                  }}
                />
              </div>
            </div>
            <h1 className="text-5xl font-bold text-gray-900 mb-6">About Me</h1>
            <p className="text-xl text-gray-600 leading-relaxed mb-6">
              ÏïàÎÖïÌïòÏÑ∏Ïöî! Ï†ÄÎäî ÎÅäÏûÑÏóÜÏù¥ ÏÑ±Ïû•ÌïòÎäî ÌíÄÏä§ÌÉù Í∞úÎ∞úÏûêÏûÖÎãàÎã§. üöÄ<br />
              ÌòÑÏû¨ Í∏àÏúµ, AI, ESG ÎèÑÎ©îÏù∏ÏóêÏÑú ÏÇ¨Ïö©Ïûê Ï§ëÏã¨Ïùò Ïõπ ÏÑúÎπÑÏä§Î•º Í∞úÎ∞úÌïòÍ≥† ÏûàÏúºÎ©∞,<br />
              Web3, AI/ML, ÌÅ¥ÎùºÏö∞Îìú ÎÑ§Ïù¥Ìã∞Î∏å Í∏∞Ïà† Îì± ÎØ∏Îûò ÏßÄÌñ•Ï†ÅÏù∏ Í∏∞Ïà† Ïä§ÌÉùÏùÑ ÌïôÏäµÌïòÎ©∞<br />
              ÏÉàÎ°úÏö¥ ÎèÑÏ†ÑÏùÑ ÌÜµÌï¥ Îçî ÎÇòÏùÄ Í∞úÎ∞úÏûêÎ°ú Î∞úÏ†ÑÌïòÍ≥†Ïûê Ìï©ÎãàÎã§.
            </p>
            <p className="text-lg text-gray-500">
              &quot;Í∏∞Ïà†ÏùÄ ÏÇ¨ÎûåÏùÑ ÏúÑÌï¥ Ï°¥Ïû¨ÌïúÎã§&quot;Îäî Ï≤†ÌïôÏúºÎ°ú Îçî ÎÇòÏùÄ ÏÇ¨Ïö©Ïûê Í≤ΩÌóòÏùÑ ÎßåÎì§Ïñ¥Í∞ëÎãàÎã§.
            </p>
          </div>
        </section>

        {/* Skills Section */}
        <section id="skills" className="min-h-screen bg-gray-50 flex items-center justify-center py-20">
          <div className="max-w-6xl mx-auto px-4">
            <h2 className="text-5xl font-bold text-center text-gray-900 mb-16">Skills</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-12">
              {[
                { 
                  name: 'Frontend', 
                  skills: [
                    { name: 'JavaScript', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg' },
                    { name: 'React', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg' },
                    { name: 'Next.js', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nextjs/nextjs-original.svg' },
                    { name: 'TypeScript', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg' },
                    { name: 'Tailwind CSS', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/tailwindcss/tailwindcss-original.svg' }
                  ] 
                },
                { 
                  name: 'Backend', 
                  skills: [
                    { name: 'Node.js', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg' },
                    { name: 'Express.js', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/express/express-original.svg' },
                    { name: 'Python', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg' },
                    { name: 'PostgreSQL', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/postgresql/postgresql-original.svg' },
                    { name: 'MongoDB', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mongodb/mongodb-original.svg' }
                  ] 
                },
                { 
                  name: 'Tools', 
                  skills: [
                    { name: 'Git', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg' },
                    { name: 'Docker', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/docker/docker-original.svg' },
                    { name: 'AWS', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/amazonwebservices/amazonwebservices-plain-wordmark.svg' },
                    { name: 'Figma', icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/figma/figma-original.svg' },
                    { name: 'Claude', icon: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/anthropic.svg' },
                    { name: 'ChatGPT', icon: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/openai.svg' }
                  ] 
                }
              ].map((category, index) => (
                <div key={index} className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow">
                  <h3 className="text-2xl font-bold mb-6 text-gray-900 text-center">{category.name}</h3>
                  <ul className="space-y-5">
                    {category.skills.map((skill, skillIndex) => (
                      <li key={skillIndex} className="flex items-center text-gray-700 text-lg">
                        <div className="w-12 h-12 bg-gray-50 rounded-lg flex items-center justify-center mr-4">
                          <img 
                            src={skill.icon} 
                            alt={skill.name}
                            className="w-8 h-8"
                            onError={(e) => {
                              e.currentTarget.style.display = 'none';
                            }}
                          />
                        </div>
                        <span className="font-medium">{skill.name}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Projects Section */}
        <section id="projects" className="min-h-screen bg-white py-20">
          <div className="max-w-6xl mx-auto px-4">
            <h2 className="text-4xl font-bold text-center text-gray-900 mb-16">Projects & Career</h2>
            
            {/* Current Position */}
            <div className="mb-16">
              <div className="bg-blue-50 p-8 rounded-xl shadow-lg border-l-4 border-blue-500">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-2xl font-bold text-gray-900">Ï£ºÏãùÌöåÏÇ¨ Ï∞¨Ïä§Ïõ®Ïù¥Î∏åÏª§ÎÆ§ÎãàÏºÄÏù¥ÏÖò</h3>
                  <span className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">ÌòÑÏû¨ Ïû¨ÏßÅÏ§ë</span>
                </div>
                <p className="text-gray-600 mb-6">2024.02 ~ ÌòÑÏû¨ (1ÎÖÑ 6Í∞úÏõî) ‚Ä¢ Ï†ïÍ∑úÏßÅ</p>
                
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                  <div className="bg-white p-6 rounded-lg shadow-md">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        üè¶
                      </div>
                      <h4 className="text-lg font-semibold text-gray-900">ÌïòÎÇòÏùÄÌñâ ÎÜÄÏù¥ÌÑ∞ API Í∞úÎ∞ú</h4>
                    </div>
                    <p className="text-sm text-blue-600 mb-3">Î∞±ÏóîÎìú ÏÑ†ÏûÑÏó∞Íµ¨Ïõê</p>
                    <p className="text-gray-700 mb-4">OAuth Í∏∞Î∞ò ÌÜ†ÌÅ∞ Î∞úÍ∏â APIÏôÄ ÏµúÏã† Îâ¥Ïä§ Îç∞Ïù¥ÌÑ∞ API Í∞úÎ∞ú</p>
                    <div className="flex flex-wrap gap-2">
                      {['OAuth', 'API Development', 'Backend'].map((tech, i) => (
                        <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                      ))}
                    </div>
                  </div>
                  
                  <div className="bg-white p-6 rounded-lg shadow-md">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        üí∞
                      </div>
                      <h4 className="text-lg font-semibold text-gray-900">ÌïòÎÇòÏõêÌÅê ÎÜÄÏù¥ÌÑ∞ Î®∏ÎãàÌä∏Î†åÎìú ÏõπÎ∑∞</h4>
                    </div>
                    <p className="text-sm text-blue-600 mb-3">ÌîÑÎ°†Ìä∏ ÏÑ†ÏûÑÎß§ÎãàÏ†Ä</p>
                    <p className="text-gray-700 mb-4">Í∏àÏúµ ÏΩòÌÖêÏ∏† ÏóêÎîîÌÑ∞ Í∞úÎ∞ú Î∞è ÏõπÎ∑∞ ÌîÑÎ°†Ìä∏/Î∞±ÏóîÎìú Í∞úÎ∞ú</p>
                    <div className="flex flex-wrap gap-2">
                      {['React', 'Next.js', 'TypeScript', 'Tiptap', 'MongoDB', 'Redis'].map((tech, i) => (
                        <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                      ))}
                    </div>
                  </div>
                  
                  <div className="bg-white p-6 rounded-lg shadow-md">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        ü§ñ
                      </div>
                      <h4 className="text-lg font-semibold text-gray-900">AI ÏÑúÎπÑÏä§ Í≤ÄÏÉâ MVP</h4>
                    </div>
                    <p className="text-sm text-blue-600 mb-3">ÌîÑÎ°†Ìä∏ ÏÑ†ÏûÑÎß§ÎãàÏ†Ä</p>
                    <p className="text-gray-700 mb-4">AI ÏÑúÎπÑÏä§ Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Îû≠ÌÇπ Î∞è Í≤ÄÏÉâ Í∏∞Îä•, SEO ÏµúÏ†ÅÌôî</p>
                    <div className="flex flex-wrap gap-2">
                      {['React', 'Next.js', 'TypeScript', 'SEO'].map((tech, i) => (
                        <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                      ))}
                    </div>
                    <a href="http://31ais.com" className="text-blue-500 hover:underline text-sm block mt-2">31ais.com ‚Üí</a>
                  </div>
                  
                  <div className="bg-white p-6 rounded-lg shadow-md">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-emerald-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        üå±
                      </div>
                      <h4 className="text-lg font-semibold text-gray-900">ÌçºÌïèÎû© ESG Îç∞Ïù¥ÌÑ∞ ÌîåÎû´Ìèº</h4>
                    </div>
                    <p className="text-sm text-blue-600 mb-3">ÌîÑÎ°†Ìä∏ ÏÑ†ÏûÑÎß§ÎãàÏ†Ä</p>
                    <p className="text-gray-700 mb-4">ESG Í≥µÍ≥µ/ÎØºÍ∞Ñ Îç∞Ïù¥ÌÑ∞, Îâ¥Ïä§, Îû≠ÌÇπ Ï†úÍ≥µ ÏÇ¨Ïù¥Ìä∏ (Î∞òÏùëÌòï)</p>
                    <div className="flex flex-wrap gap-2">
                      {['React', 'Next.js', 'TypeScript', 'Zustand', 'MongoDB', 'SEO'].map((tech, i) => (
                        <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                      ))}
                    </div>
                    <a href="https://pufit.kr" className="text-blue-500 hover:underline text-sm block mt-2">pufit.kr ‚Üí</a>
                  </div>
                </div>
              </div>
            </div>

            {/* Previous Experience */}
            <div className="space-y-8">
              <div className="bg-gray-50 p-6 rounded-lg shadow-md">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-xl font-semibold text-gray-900">Ï£ºÏãùÌöåÏÇ¨ Ìå¨ÏãúÌîåÎ†àÏù¥Ïä§</h3>
                  <span className="text-gray-500 text-sm">2023.02 - 2023.07 (6Í∞úÏõî)</span>
                </div>
                <div className="flex items-center mb-2">
                  <span className="text-xl mr-2">ü™ô</span>
                  <h4 className="text-lg text-blue-600">ÌéúÏãú ÏõîÎ†õ Í≥†ÎèÑÌôî Í∞úÎ∞ú</h4>
                </div>
                <p className="text-gray-700 mb-3">PHP Í∏∞Î∞ò ÌéúÏãú ÏõîÎ†õ ÌïòÏù¥Î∏åÎ¶¨Îìú Ïï±ÏùÑ React, GraphQLÎ°ú Í≥†ÎèÑÌôî</p>
                <div className="flex flex-wrap gap-2">
                  {['React', 'GraphQL', 'Hybrid App'].map((tech, i) => (
                    <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                  ))}
                </div>
              </div>

              <LimeCompanySwiper />
            </div>
          </div>
        </section>

        {/* Personal Projects Section */}
        <section id="personal-projects" className="min-h-screen bg-gray-100 py-20">
          <div className="max-w-6xl mx-auto px-4">
            <h2 className="text-5xl font-bold text-center text-gray-900 mb-16">ÌòÑÏû¨ Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏ ÏßÑÌñâ</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow">
                <div className="flex items-center mb-6">
                  <div className="w-16 h-16 bg-orange-100 rounded-xl flex items-center justify-center mr-4 text-3xl">
                    üçΩÔ∏è
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-gray-900">Ï∫êÏπòÌÖåÏù¥Î∏î Î≤§ÏπòÎßàÌÇπ ÏÇ¨Ïù¥Ìä∏</h3>
                    <span className="text-sm text-orange-600 font-medium">2024.07 ~ ÏßÑÌñâÏ§ë</span>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <span className="bg-orange-100 text-orange-800 px-4 py-2 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                </div>
                <p className="text-gray-600 mt-4 text-center">
                  Î†àÏä§ÌÜ†Îûë ÏòàÏïΩ ÏÑúÎπÑÏä§Ïùò ÏÇ¨Ïö©Ïûê Í≤ΩÌóòÏùÑ Í∞úÏÑ†Ìïú Ïõπ ÌîåÎû´Ìèº
                </p>
                <div className="flex flex-wrap gap-2 justify-center mt-4">
                  {['React', 'Next.js', 'TypeScript'].map((tech, i) => (
                    <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                  ))}
                </div>
              </div>

              <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow">
                <div className="flex items-center mb-6">
                  <div className="w-16 h-16 bg-green-100 rounded-xl flex items-center justify-center mr-4 text-3xl">
                    üåç
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-gray-900">ÌÉÑÏÜå Í∞êÏ∂ï SaaS ÌîåÎû´Ìèº</h3>
                    <span className="text-sm text-green-600 font-medium">2024.07 ~ ÏßÑÌñâÏ§ë</span>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <span className="bg-green-100 text-green-800 px-4 py-2 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                </div>
                <p className="text-gray-600 mt-4 text-center">
                  Í∏∞ÏóÖÏùò ÌÉÑÏÜå Î∞∞Ï∂úÎüâ Í¥ÄÎ¶¨ Î∞è Í∞êÏ∂ïÏùÑ ÏúÑÌïú ÌÜµÌï© ÏÜîÎ£®ÏÖò
                </p>
                <div className="flex flex-wrap gap-2 justify-center mt-4">
                  {['React', 'Node.js', 'MongoDB', 'D3.js'].map((tech, i) => (
                    <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                  ))}
                </div>
              </div>

              <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow">
                <div className="flex items-center mb-6">
                  <div className="w-16 h-16 bg-purple-100 rounded-xl flex items-center justify-center mr-4 text-3xl">
                    üì±
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-gray-900">ÏúÑÏπòÍ∏∞Î∞ò Ïã¨Î∂ÄÎ¶Ñ ÌîåÎû´Ìèº ÌïòÏù¥Î∏åÎ¶¨Îìú ÏõπÏï±</h3>
                    <span className="text-sm text-purple-600 font-medium">2024.08 ~ ÏßÑÌñâÏ§ë</span>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <span className="bg-purple-100 text-purple-800 px-4 py-2 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                </div>
                <p className="text-gray-600 mt-4 text-center">
                  ÏùºÏÉÅ ÏÉùÌôúÏùò Ïã¨Î∂ÄÎ¶ÑÏùÑ ÏâΩÍ≤å ÏöîÏ≤≠ÌïòÍ≥† Ï≤òÎ¶¨Ìï† Ïàò ÏûàÎäî Î™®Î∞îÏùº ÌîåÎû´Ìèº
                </p>
                <div className="flex flex-wrap gap-2 justify-center mt-4">
                  {['React Native', 'Node.js', 'MongoDB', 'Socket.io'].map((tech, i) => (
                    <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                  ))}
                </div>
              </div>

              <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow">
                <div className="flex items-center mb-6">
                  <div className="w-16 h-16 bg-cyan-100 rounded-xl flex items-center justify-center mr-4 text-3xl">
                    <img src="/ai-image-generator.png" alt="AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±Í∏∞" className="w-full h-full object-cover" />
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-gray-900">AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±Í∏∞</h3>
                    <span className="text-sm text-cyan-600 font-medium">2024.09 ~ ÏßÑÌñâÏ§ë</span>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <span className="bg-cyan-100 text-cyan-800 px-4 py-2 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                </div>
                <p className="text-gray-600 mt-4 text-center">
                  ÌÖçÏä§Ìä∏ ÌîÑÎ°¨ÌîÑÌä∏Î°ú Í≥†ÌíàÏßà AI Ïù¥ÎØ∏ÏßÄÎ•º ÏÉùÏÑ±ÌïòÎäî Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò
                </p>
                <div className="flex flex-wrap gap-2 justify-center mt-4">
                  {['Next.js 15', 'React 19', 'TypeScript', 'Redux Toolkit', 'Replicate API'].map((tech, i) => (
                    <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                  ))}
                </div>
              </div>

              <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow">
                <div className="flex items-center mb-6">
                  <div className="w-16 h-16 bg-emerald-100 rounded-xl flex items-center justify-center mr-4 text-3xl">
                    {/* Ïù¥ÎØ∏ÏßÄ Í≥µÍ∞Ñ */}
                    üé§
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-gray-900">ÏùåÏÑ± ÎπÑÏÑú AI - Ïä§ÎßàÌä∏ ÏùºÏ†ï/Î©îÎ™® Í¥ÄÎ¶¨</h3>
                    <span className="text-sm text-emerald-600 font-medium">2024.09 ~ ÏßÑÌñâÏ§ë</span>
                  </div>
                </div>
                <div className="flex items-center justify-center">
                  <span className="bg-emerald-100 text-emerald-800 px-4 py-2 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                </div>
                <p className="text-gray-600 mt-4 text-center">
                  Web Speech API Í∏∞Î∞ò ÏùåÏÑ± Ïù∏Ïãù Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò
                </p>
                <div className="flex flex-wrap gap-2 justify-center mt-4">
                  {['Next.js 15.5.2', 'React 18', 'TypeScript', 'Zustand', 'Web Speech API'].map((tech, i) => (
                    <span key={i} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">{tech}</span>
                  ))}
                </div>
              </div>
            </div>

            <div className="text-center mt-12">
              <p className="text-lg text-gray-600">
                üí° ÏÉàÎ°úÏö¥ Í∏∞Ïà†Í≥º ÌïòÎÇòÏõêÌÅê ÎÜÄÏù¥ÌÑ∞ Î®∏ÎãàÌä∏Î†åÎìú ÏõπÎ∑∞Ìä∏Î†åÎìúÎ•º Ï†ÅÍ∑πÏ†ÅÏúºÎ°ú ÌïôÏäµÌïòÎ©∞ Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏Î•º ÌÜµÌï¥ Ïã§Î¨¥ Ïó≠ÎüâÏùÑ Ìñ•ÏÉÅÏãúÌÇ§Í≥† ÏûàÏäµÎãàÎã§.
              </p>
            </div>
          </div>
        </section>

        {/* ÏßÑÌñâ Ï§ëÏù∏ Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏ Section */}
        <section className="py-20 bg-white">
          <div className="max-w-6xl mx-auto px-4">
            <h2 className="text-4xl font-bold text-center text-gray-900 mb-16">ÏßÑÌñâ Ï§ëÏù∏ Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏</h2>
            
            {/* Map API Í∏∞Î∞ò Ïã¨Î∂ÄÎ¶Ñ ÌîåÎû´Ìèº */}
            <div className="mb-16">
              <div className="bg-white p-8 rounded-xl shadow-lg">
                <div className="flex flex-col lg:flex-row gap-8 items-center">
                  {/* ÌîÑÎ°úÏ†ùÌä∏ Ïù¥ÎØ∏ÏßÄ */}
                  <div className="flex-shrink-0">
                    <img 
                      src="/project2.png"
                      alt="ÏßÄÎèÑ API Í∏∞Î∞ò Ïã¨Î∂ÄÎ¶Ñ ÌîåÎû´Ìèº"
                      className="max-w-full h-auto rounded-lg shadow-md"
                      style={{ maxHeight: '400px', maxWidth: '500px' }}
                      onError={(e) => {
                        // Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ïã§Ìå®Ïãú ÎåÄÏ≤¥ ÏΩòÌÖêÏ∏† ÌëúÏãú
                        e.currentTarget.style.display = 'none';
                        if(e.currentTarget.parentElement) {
                          e.currentTarget.parentElement.innerHTML = '<div class="flex items-center justify-center bg-gray-100 rounded-lg p-8 w-96 h-64"><span class="text-4xl">üó∫Ô∏è</span><span class="ml-4 text-gray-600">ÏßÄÎèÑ Í∏∞Î∞ò ÌîåÎû´Ìèº</span></div>';
                        }
                      }}
                    />
                  </div>
                  
                  {/* ÌîÑÎ°úÏ†ùÌä∏ ÏÑ§Î™Ö */}
                  <div className="flex-grow">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        üìç
                      </div>
                      <h3 className="text-2xl font-bold text-gray-900">ÏßÄÎèÑ API Í∏∞Î∞ò Ïã¨Î∂ÄÎ¶Ñ ÌîåÎû´Ìèº</h3>
                    </div>
                    
                    <div className="flex items-center mb-4">
                      <span className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                      <span className="ml-3 text-gray-500 text-sm">2024.08 ~ ÌòÑÏû¨</span>
                    </div>
                    
                    <div className="space-y-3 mb-6">
                      <p className="text-gray-700 text-lg font-semibold">ÏúÑÏπò Í∏∞Î∞ò Ïã¨Î∂ÄÎ¶Ñ Îß§Ïπ≠ ÏÑúÎπÑÏä§</p>
                      <ul className="text-gray-600 space-y-2 list-disc list-inside">
                        <li>Ïã§ÏãúÍ∞Ñ ÏßÄÎèÑ APIÎ•º ÌôúÏö©Ìïú ÏúÑÏπò Í∏∞Î∞ò Ïã¨Î∂ÄÎ¶Ñ ÏöîÏ≤≠/ÏàòÌñâ Îß§Ïπ≠</li>
                        <li>GPS Í∏∞Î∞ò Ï£ºÎ≥Ä Ïã¨Î∂ÄÎ¶Ñ Í≤ÄÏÉâ Î∞è Í±∞Î¶¨Î≥Ñ Ï†ïÎ†¨ Í∏∞Îä•</li>
                        <li>ÏÇ¨Ïö© ÏïàÏ†ÑÏÑ±ÏùÑ ÏúÑÌïú ÏÇ¨Ïö©Ïûê Ïù∏Ï¶ù ÎèÑÏûÖ ( ÏòàÏ†ï )</li>
                        <li>Í≤∞Ï†ú ÏãúÏä§ÌÖú Î∞è Î¶¨Î∑∞ ÌèâÏ†ê Í¥ÄÎ¶¨ ( ÏòàÏ†ï )</li>
                      </ul>
                    </div>
                    
                    <div className="flex flex-wrap gap-2 mb-4">
                      <span className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm">React Native</span>
                      <span className="bg-green-100 text-green-700 px-3 py-1 rounded-full text-sm">Node.js</span>
                      <span className="bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-sm">MongoDB</span>
                      <span className="bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm">Socket.io</span>
                      <span className="bg-red-100 text-red-700 px-3 py-1 rounded-full text-sm">Kakao Map API</span>
                      <span className="bg-indigo-100 text-indigo-700 px-3 py-1 rounded-full text-sm">GPS</span>
                    </div>
                    
                    <div className="bg-blue-50 p-4 rounded-lg">
                      <p className="text-blue-800 text-sm">
                        <strong>üí° Ï£ºÏöî ÌäπÏßï:</strong> ÏùºÏÉÅÏÉùÌôúÏóêÏÑú ÌïÑÏöîÌïú Îã§ÏñëÌïú Ïã¨Î∂ÄÎ¶Ñ(Î∞∞Îã¨, ÎåÄÌñâ, Íµ¨Îß§ Îì±)ÏùÑ 
                        ÏßÄÎèÑ Í∏∞Î∞òÏúºÎ°ú ÏâΩÍ≤å ÏöîÏ≤≠ÌïòÍ≥† Ï≤òÎ¶¨Ìï† Ïàò ÏûàÎäî O2O ÌîåÎû´ÌèºÏùÑ Í∞úÎ∞ú Ï§ëÏûÖÎãàÎã§.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            {/* ERP Ï†úÏ°∞Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú */}
            <div className="mb-16">
              <div className="bg-white p-8 rounded-xl shadow-lg">
                <div className="flex flex-col lg:flex-row gap-8 items-center">
                  <img src="/privatepjt2.png" alt="ERP Ï†úÏ°∞Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú" className="max-w-full h-auto rounded-lg shadow-md" style={{ maxHeight: '400px', maxWidth: '500px' }} />                  
                  {/* ÌîÑÎ°úÏ†ùÌä∏ ÏÑ§Î™Ö */}
                  <div className="flex-grow">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        ‚öôÔ∏è
                      </div>
                      <h3 className="text-2xl font-bold text-gray-900">ERP Ï†úÏ°∞Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú (Full-Stack Web Application)</h3>
                    </div>
                    
                    <div className="flex items-center mb-4">
                      <span className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                      <span className="ml-3 text-gray-500 text-sm">2024.09 ~ ÌòÑÏû¨</span>
                    </div>
                    
                    <div className="space-y-4 mb-6">
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">Í∏∞Ïà† Ïä§ÌÉù:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li><strong>Frontend:</strong> Next.js 14, TypeScript, Tailwind CSS, Zustand</li>
                          <li><strong>Backend:</strong> Node.js, Express.js, TypeScript</li>
                          <li><strong>Database:</strong> MongoDB (Mongoose ODM)</li>
                          <li><strong>Authentication:</strong> JWT, bcrypt</li>
                          <li><strong>File Processing:</strong> ExcelJS, jsPDF</li>
                          <li><strong>Testing:</strong> Jest, Supertest, Playwright</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">Ï£ºÏöî Í∏∞Îä•:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>ÏÇ¨Ïö©Ïûê Í¥ÄÎ¶¨ (Admin/Manager/User Í∂åÌïú)</li>
                          <li>Ïû¨Í≥† Í¥ÄÎ¶¨ Î∞è Ïã§ÏãúÍ∞Ñ Ï∂îÏ†Å</li>
                          <li>ÏÉùÏÇ∞ Í≥ÑÌöç Î∞è ÏûëÏóÖ ÏßÄÏãúÏÑú Í¥ÄÎ¶¨</li>
                          <li>Íµ¨Îß§ ÏöîÏ≤≠ Î∞è Î∞úÏ£º Í¥ÄÎ¶¨</li>
                          <li>ÌíàÏßà Í≤ÄÏÇ¨ Î∞è ÌíàÏßà Í¥ÄÎ¶¨</li>
                          <li>ÌöåÍ≥Ñ Î∞è Î¶¨Ìè¨ÌåÖ (Excel/PDF Ï∂úÎ†•)</li>
                          <li>ÎåÄÏãúÎ≥¥Îìú Î∞è Îç∞Ïù¥ÌÑ∞ ÏãúÍ∞ÅÌôî</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">ÌäπÏßï:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>RESTful API ÏÑ§Í≥Ñ</li>
                          <li>JWT Í∏∞Î∞ò Ïù∏Ï¶ù/Ïù∏Í∞Ä</li>
                          <li>MongoDB Ïù∏Îç±Ïã± ÏµúÏ†ÅÌôî</li>
                          <li>TypeScript ÌÉÄÏûÖ ÏïàÏ†ïÏÑ±</li>
                          <li>Î∞òÏùëÌòï UI/UX</li>
                          <li>Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨</li>
                          <li>Îã§Ï§ë ÏÇ¨Ïö©Ïûê Í∂åÌïú Í¥ÄÎ¶¨</li>
                          <li>ÏóëÏÖÄ Îç∞Ïù¥ÌÑ∞ Import/Export</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">Í∞úÎ∞ú ÌôòÍ≤Ω:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>Í∞úÎ∞úÏÑúÎ≤Ñ: ConcurrentlyÎ°ú Frontend/Backend ÎèôÏãú Ïã§Ìñâ</li>
                          <li>ÌÖåÏä§Ìä∏: Îã®ÏúÑ/ÌÜµÌï©/E2E ÌÖåÏä§Ìä∏ Íµ¨Ï∂ï</li>
                          <li>ÏãúÎìú Îç∞Ïù¥ÌÑ∞: Í∞úÎ∞úÏö© ÏÉòÌîå Îç∞Ïù¥ÌÑ∞ ÏûêÎèô ÏÉùÏÑ±</li>
                        </ul>
                      </div>
                    </div>
                    
                    <div className="flex flex-wrap gap-2 mb-4">
                      <span className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm">Next.js 14</span>
                      <span className="bg-green-100 text-green-700 px-3 py-1 rounded-full text-sm">TypeScript</span>
                      <span className="bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-sm">MongoDB</span>
                      <span className="bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm">Express.js</span>
                      <span className="bg-red-100 text-red-700 px-3 py-1 rounded-full text-sm">JWT</span>
                      <span className="bg-indigo-100 text-indigo-700 px-3 py-1 rounded-full text-sm">Zustand</span>
                      <span className="bg-pink-100 text-pink-700 px-3 py-1 rounded-full text-sm">ExcelJS</span>
                    </div>
                    
                    <div className="bg-indigo-50 p-4 rounded-lg">
                      <p className="text-indigo-800 text-sm">
                        <strong>üí° Ï£ºÏöî ÌäπÏßï:</strong> Ï†úÏ°∞ÏóÖÏ≤¥Ïùò Ï†ÑÏ≤¥ Ïö¥ÏòÅ ÌîÑÎ°úÏÑ∏Ïä§Î•º ÎîîÏßÄÌÑ∏ÌôîÌïòÏó¨ Ìö®Ïú®Ï†ÅÏù∏ ÏÉùÏÇ∞ Í¥ÄÎ¶¨, 
                        Ïû¨Í≥† Ï∂îÏ†Å, ÌíàÏßà Í¥ÄÎ¶¨Î•º ÌÜµÌï©Ï†ÅÏúºÎ°ú Ï†úÍ≥µÌïòÎäî ÌíÄÏä§ÌÉù ERP ÏãúÏä§ÌÖúÏùÑ Í∞úÎ∞ú Ï§ëÏûÖÎãàÎã§.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            {/* AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±Í∏∞ ÏÉÅÏÑ∏ Ï†ïÎ≥¥ */}
            <div className="mb-16">
              <div className="bg-white p-8 rounded-xl shadow-lg">
                <div className="flex flex-col lg:flex-row gap-8 items-center">
                  {/* ÌîÑÎ°úÏ†ùÌä∏ Ïù¥ÎØ∏ÏßÄ */}
                  <div className="flex-shrink-0">
                    <div className="flex items-center justify-center bg-gradient-to-br from-cyan-400 to-purple-500 rounded-lg p-8 w-96 h-64">
                      <div className="text-center text-white">
                        {/* <span className="text-6xl">üé®</span> */}
                        <img src="/ai-image-generator.png" alt="AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±Í∏∞" className="w-full h-full object-cover" />
                        <p className="mt-4 text-lg font-semibold">AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±Í∏∞</p>
                      </div>
                    </div>
                  </div>
                  
                  {/* ÌîÑÎ°úÏ†ùÌä∏ ÏÑ§Î™Ö */}
                  <div className="flex-grow">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-cyan-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        ü§ñ
                      </div>
                      <h3 className="text-2xl font-bold text-gray-900">AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±Í∏∞ (Text-to-Image Generator)</h3>
                    </div>
                    
                    <div className="flex items-center mb-4">
                      <span className="bg-cyan-100 text-cyan-800 px-3 py-1 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                      <span className="ml-3 text-gray-500 text-sm">2024.09 ~ ÌòÑÏû¨</span>
                    </div>
                    
                    <div className="space-y-4 mb-6">
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">Í∏∞Ïà† Ïä§ÌÉù:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li><strong>Frontend:</strong> Next.js 15, React 19, TypeScript</li>
                          <li><strong>ÏÉÅÌÉúÍ¥ÄÎ¶¨:</strong> Redux Toolkit</li>
                          <li><strong>Ïä§ÌÉÄÏùºÎßÅ:</strong> Tailwind CSS</li>
                          <li><strong>AI API:</strong> Replicate API (Stable Diffusion)</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">ÌïµÏã¨ Í∏∞Îä•:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>ÌÖçÏä§Ìä∏ ÌîÑÎ°¨ÌîÑÌä∏ Í∏∞Î∞ò AI Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ± (512x512 Í≥†Ìï¥ÏÉÅÎèÑ)</li>
                          <li>NSFW ÏΩòÌÖêÏ∏† ÏûêÎèô Ï∞®Îã® Î∞è ÏïàÏ†Ñ ÌïÑÌÑ∞ÎßÅ ÏãúÏä§ÌÖú</li>
                          <li>Redux ToolkitÏùÑ ÌôúÏö©Ìïú Ï†ÑÏó≠ ÏÉÅÌÉú Í¥ÄÎ¶¨</li>
                          <li>Ïã§ÏãúÍ∞Ñ Î°úÎî© ÏÉÅÌÉú ÌëúÏãú Î∞è ÏóêÎü¨ Ìï∏Îì§ÎßÅ</li>
                          <li>ÏÉùÏÑ±Îêú Ïù¥ÎØ∏ÏßÄ ÌûàÏä§ÌÜ†Î¶¨ Í¥ÄÎ¶¨ Î∞è Í∑∏Î¶¨Îìú Î∑∞</li>
                          <li>Î∞òÏùëÌòï Î™®Îçò UI (Î™®Î∞îÏùº/Îç∞Ïä§ÌÅ¨ÌÜ± ÏßÄÏõê)</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">Ï£ºÏöî ÌäπÏßï:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>Stable Diffusion Î™®Îç∏ÏùÑ ÌÜµÌïú Í≥†ÌíàÏßà Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±</li>
                          <li>Îã§Ï§ë Í≤ÄÏ¶ù ÏãúÏä§ÌÖúÏúºÎ°ú ÏïàÏ†ÑÌïú ÏΩòÌÖêÏ∏† Î≥¥Ïû•</li>
                          <li>ÏßÅÍ¥ÄÏ†ÅÏù∏ ÏÇ¨Ïö©Ïûê Ïù∏ÌÑ∞ÌéòÏù¥Ïä§</li>
                          <li>ÏÉÅÌô©Î≥Ñ Íµ¨Ï≤¥Ï†ÅÏù∏ ÏóêÎü¨ Î©îÏãúÏßÄ Ï†úÍ≥µ</li>
                          <li>Í∑∏ÎùºÎîîÏñ∏Ìä∏ Î∞∞Í≤ΩÏùò Î™®ÎçòÌïú ÎîîÏûêÏù∏</li>
                          <li>ÌíÄÏÇ¨Ïù¥Ï¶à Ïù¥ÎØ∏ÏßÄ ÏÉà ÌÉ≠ Ïó¥Í∏∞ Í∏∞Îä•</li>
                        </ul>
                      </div>
                    </div>
                    
                    <div className="flex flex-wrap gap-2 mb-4">
                      <span className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm">Next.js 15</span>
                      <span className="bg-green-100 text-green-700 px-3 py-1 rounded-full text-sm">React 19</span>
                      <span className="bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-sm">TypeScript</span>
                      <span className="bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm">Redux Toolkit</span>
                      <span className="bg-cyan-100 text-cyan-700 px-3 py-1 rounded-full text-sm">Tailwind CSS</span>
                      <span className="bg-pink-100 text-pink-700 px-3 py-1 rounded-full text-sm">Replicate API</span>
                    </div>
                    
                    <div className="bg-cyan-50 p-4 rounded-lg">
                      <p className="text-cyan-800 text-sm">
                        <strong>üí° Ï£ºÏöî ÌäπÏßï:</strong> ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûÖÎ†•Ìïú ÌÖçÏä§Ìä∏ ÌîÑÎ°¨ÌîÑÌä∏Î•º Î∞îÌÉïÏúºÎ°ú Stable Diffusion AI Î™®Îç∏ÏùÑ ÌôúÏö©ÌïòÏó¨ 
                        Í≥†ÌíàÏßàÏùò Ïù¥ÎØ∏ÏßÄÎ•º ÏÉùÏÑ±ÌïòÎäî Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏûÖÎãàÎã§. NSFW ÌïÑÌÑ∞ÎßÅÍ≥º ÏïàÏ†Ñ Í≤ÄÏ¶ù ÏãúÏä§ÌÖúÏúºÎ°ú ÏïàÏ†ÑÌïú ÏΩòÌÖêÏ∏† ÏÉùÏÑ±ÏùÑ Î≥¥Ïû•Ìï©ÎãàÎã§.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* ÏùåÏÑ± ÎπÑÏÑú AI ÏÉÅÏÑ∏ Ï†ïÎ≥¥ */}
            <div className="mb-16">
              <div className="bg-white p-8 rounded-xl shadow-lg">
                <div className="flex flex-col lg:flex-row gap-8 items-center">
                  {/* ÌîÑÎ°úÏ†ùÌä∏ Ïù¥ÎØ∏ÏßÄ */}
                  <div className="flex-shrink-0">
                    <img src="/secretaryai.png" alt="ÏùåÏÑ± ÎπÑÏÑú AI" className="w-100 h-auto rounded-lg" />
                  </div>
                  {/* ÌîÑÎ°úÏ†ùÌä∏ ÏÑ§Î™Ö */}
                  <div className="flex-grow">
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-emerald-100 rounded-lg flex items-center justify-center mr-4 text-2xl">
                        üó£Ô∏è
                      </div>
                      <h3 className="text-2xl font-bold text-gray-900">ÏùåÏÑ± ÎπÑÏÑú AI - Ïä§ÎßàÌä∏ ÏùºÏ†ï/Î©îÎ™® Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú</h3>
                    </div>
                    
                    <div className="flex items-center mb-4">
                      <span className="bg-emerald-100 text-emerald-800 px-3 py-1 rounded-full text-sm font-medium">Í∞úÎ∞ú ÏßÑÌñâÏ§ë</span>
                      <span className="ml-3 text-gray-500 text-sm">2024.09 ~ ÌòÑÏû¨</span>
                    </div>
                    
                    <div className="space-y-4 mb-6">
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">üõ† Ï£ºÏöî Í∏∞Ïà† Ïä§ÌÉù:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li><strong>Frontend:</strong> Next.js 15.5.2, React 18, TypeScript</li>
                          <li><strong>ÏÉÅÌÉúÍ¥ÄÎ¶¨:</strong> Zustand (Í≤ΩÎüâ ÏÉÅÌÉú Í¥ÄÎ¶¨)</li>
                          <li><strong>Ïä§ÌÉÄÏùºÎßÅ:</strong> Tailwind CSS, Lucide React</li>
                          <li><strong>Î∏åÎùºÏö∞Ï†Ä API:</strong> Web Speech API (Speech Recognition/Synthesis)</li>
                          <li><strong>Îç∞Ïù¥ÌÑ∞:</strong> localStorage Í∏∞Î∞ò ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÇ¨Ïù¥Îìú Ï†ÄÏû•</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">‚ö° ÌïµÏã¨ Í∏∞Îä• Î∞è Íµ¨ÌòÑ:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>Ïã§ÏãúÍ∞Ñ ÏùåÏÑ± Ïù∏Ïãù: ÌïúÍµ≠Ïñ¥ ÏùåÏÑ±ÏùÑ Ïã§ÏãúÍ∞ÑÏúºÎ°ú ÌÖçÏä§Ìä∏ Î≥ÄÌôò</li>
                          <li>ÏûêÏó∞Ïñ¥ Ï≤òÎ¶¨: Ï†ïÍ∑úÌëúÌòÑÏãù Í∏∞Î∞òÏúºÎ°ú "ÎÇ¥Ïùº Ïò§ÌõÑ 3Ïãú ÌöåÏùò" Îì±Ïùò ÏûêÏó∞Ïä§Îü¨Ïö¥ ÌëúÌòÑ Ìï¥ÏÑù</li>
                          <li>ÏùåÏÑ± ÌîºÎìúÎ∞±: Text-to-SpeechÎ°ú Ï≤òÎ¶¨ Í≤∞Í≥ºÎ•º ÏùåÏÑ±ÏúºÎ°ú ÏùëÎãµ</li>
                          <li>Îç∞Ïù¥ÌÑ∞ ÏòÅÏÜçÏÑ±: localStorageÎ•º ÌÜµÌïú ÏùºÏ†ï/Î©îÎ™® Îç∞Ïù¥ÌÑ∞ Í¥ÄÎ¶¨</li>
                          <li>Î∞òÏùëÌòï UI: Î™®Î∞îÏùºÎ∂ÄÌÑ∞ Îç∞Ïä§ÌÅ¨ÌÜ±ÍπåÏßÄ ÏµúÏ†ÅÌôîÎêú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">üéØ Í∏∞Ïà†Ï†Å ÎèÑÏ†ÑÍ≥º Ìï¥Í≤∞:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>Î∏åÎùºÏö∞Ï†Ä Ìò∏ÌôòÏÑ±: Web Speech API ÏßÄÏõê Ïó¨Î∂Ä Ï≤¥ÌÅ¨ Î∞è fallback Ï≤òÎ¶¨</li>
                          <li>SSR Ïù¥Ïäà: Next.js ÏÑúÎ≤ÑÏÇ¨Ïù¥ÎìúÏóêÏÑú window Í∞ùÏ≤¥ Ï†ëÍ∑º Î¨∏Ï†ú Ìï¥Í≤∞</li>
                          <li>Ïã§ÏãúÍ∞Ñ ÏÉÅÌÉú Í¥ÄÎ¶¨: ZustandÎ°ú ÏùåÏÑ± Ïù∏Ïãù ÏÉÅÌÉúÏôÄ UI ÎèôÍ∏∞Ìôî</li>
                          <li>ÏûêÏó∞Ïñ¥ ÌååÏã±: Îã§ÏñëÌïú ÌïúÍµ≠Ïñ¥ ÏãúÍ∞Ñ/ÎÇ†Ïßú ÌëúÌòÑÏùÑ ÏΩîÎìúÎ°ú Ìï¥ÏÑùÌïòÎäî ÏïåÍ≥†Î¶¨Ï¶ò Íµ¨ÌòÑ</li>
                        </ul>
                      </div>
                      
                      <div>
                        <p className="text-gray-700 text-lg font-semibold mb-2">üìà ÌîÑÎ°úÏ†ùÌä∏ ÏÑ±Í≥º:</p>
                        <ul className="text-gray-600 space-y-1 list-disc list-inside ml-4">
                          <li>Î™®Îçò Ïõπ Í∏∞Ïà†Í≥º Î∏åÎùºÏö∞Ï†Ä ÎÑ§Ïù¥Ìã∞Î∏å APIÎ•º Í≤∞Ìï©Ìïú ÏÇ¨Ïö©Ïûê ÏπúÌôîÏ†Å ÏùåÏÑ± Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ Íµ¨ÌòÑ</li>
                          <li>TypeScriptÎ•º ÌÜµÌïú ÌÉÄÏûÖ ÏïàÏ†ÑÏÑ± ÌôïÎ≥¥ÏôÄ Î™®ÎìàÌôîÎêú ÏïÑÌÇ§ÌÖçÏ≤òÎ°ú ÌôïÏû• Í∞ÄÎä•Ìïú ÏΩîÎìú Íµ¨Ï°∞ ÏÑ§Í≥Ñ</li>
                        </ul>
                      </div>
                    </div>
                    
                    <div className="flex flex-wrap gap-2 mb-4">
                      <span className="bg-emerald-100 text-emerald-700 px-3 py-1 rounded-full text-sm">Next.js 15.5.2</span>
                      <span className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm">React 18</span>
                      <span className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm">TypeScript</span>
                      <span className="bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm">Zustand</span>
                      <span className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm">Web Speech API</span>
                      <span className="bg-teal-100 text-teal-700 px-3 py-1 rounded-full text-sm">Tailwind CSS</span>
                    </div>
                    
                    <div className="bg-emerald-50 p-4 rounded-lg">
                      <p className="text-emerald-800 text-sm">
                        <strong>üí° Ï£ºÏöî ÌäπÏßï:</strong> Î∏åÎùºÏö∞Ï†ÄÏùò ÎÑ§Ïù¥Ìã∞Î∏å ÏùåÏÑ± APIÎ•º ÌôúÏö©ÌïòÏó¨ ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûêÏó∞Ïä§Îü¨Ïö¥ ÌïúÍµ≠Ïñ¥Î°ú ÏùºÏ†ï Îì±Î°ùÍ≥º Î©îÎ™® ÏûëÏÑ±ÏùÑ Ìï† Ïàò ÏûàÎäî Ïä§ÎßàÌä∏ ÏùåÏÑ± ÎπÑÏÑúÏûÖÎãàÎã§.
                        Ïã§ÏãúÍ∞Ñ ÏùåÏÑ±-ÌÖçÏä§Ìä∏ Î≥ÄÌôò, ÏûêÏó∞Ïñ¥ Ï≤òÎ¶¨, Í∑∏Î¶¨Í≥† ÏùåÏÑ± ÌîºÎìúÎ∞±ÍπåÏßÄ Ï†úÍ≥µÌïòÎäî ÏôÑÏ†ÑÌïú ÏùåÏÑ± Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌñàÏäµÎãàÎã§.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
          </div>
        </section>

        {/* Contact Section */}
        <section id="contact" className="min-h-screen bg-gray-50 flex items-center justify-center">
          <div className="max-w-4xl mx-auto px-4 text-center">
            <h2 className="text-4xl font-bold text-gray-900 mb-12">Contact</h2>
            <div className="bg-white p-8 rounded-lg shadow-md">
              <div className="text-6xl mb-6">üëã</div>
              <p className="text-xl text-gray-600 mb-8">
                ÌîÑÎ°úÏ†ùÌä∏ÎÇò ÌòëÏóÖÏóê ÎåÄÌï¥ Î¨∏ÏùòÌïòÍ≥† Ïã∂ÏúºÏãúÎã§Î©¥ Ïñ∏Ï†úÎì† Ïó∞ÎùΩÏ£ºÏÑ∏Ïöî!<br />
                ÏÉàÎ°úÏö¥ Í∏∞Ïà†Í≥º ÎèÑÏ†ÑÏ†ÅÏù∏ ÌîÑÎ°úÏ†ùÌä∏Î•º Ìï®Íªò ÎßåÎì§Ïñ¥Í∞ÄÏöî! ü§ù
              </p>
              <div className="space-y-6">
                <div className="flex items-center justify-center bg-gray-50 p-4 rounded-lg">
                  <span className="text-2xl mr-3">üìß</span>
                  <span className="text-gray-700 font-medium mr-2">Ïù¥Î©îÏùº:</span>
                  <a href="mailto:chos1909@gmail.com" className="text-blue-600 hover:underline">chos1909@gmail.com</a>
                </div>
                <div className="flex items-center justify-center bg-gray-50 p-4 rounded-lg">
                  <span className="text-2xl mr-3">üì±</span>
                  <span className="text-gray-700 font-medium mr-2">Ï†ÑÌôîÎ≤àÌò∏:</span>
                  <a href="tel:010-4093-9680" className="text-blue-600 hover:underline">010-4093-9680</a>
                </div>
              </div>
              <div className="mt-8 flex justify-center space-x-4">
                <a 
                  href="https://github.com/worldhostm" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="bg-gray-800 text-white px-6 py-3 rounded-lg hover:bg-gray-900 transition-colors flex items-center"
                >
                  <span className="mr-2">‚≠ê</span>
                  GitHub
                </a>
                <button className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center">
                  <span className="mr-2">üíº</span>
                  LinkedIn
                </button>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  )
}